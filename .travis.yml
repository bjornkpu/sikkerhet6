# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: archlinux/base

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  before_script:
    - pacman -Syu cmake make clang git --noconfirm

  script:
    - mkdir build
    - cd build
    - CXX=clang++ cmake ..
    - make
  artifacts:
    paths:
      - string1
      - tests/utility_fuzzer_test
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - ./tests/utility_fuzzer_test -max_total_time=60
